// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndSAT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250729231737_Initial3")]
    partial class Initial3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.CategoriaVacante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasVacante");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Operaciones Especiales"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inteligencia y Contrainteligencia"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Seguridad Fronteriza"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Ciberseguridad"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Administración"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Logística"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Comunicaciones"
                        });
                });

            modelBuilder.Entity("Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Dirección de Tecnología",
                            Director = "Capitan de Navío Jhonathan de la Cruz"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Recursos Humanos",
                            Director = "Mayor Piloto Jesica Heredia"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "Operaciones",
                            Director = "Coronel de Infantería Juan Pérez"
                        });
                });

            modelBuilder.Entity("Entities.Institucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlLogo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instituciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoNombre = "CESAC",
                            Direccion = "Av. Aeropuerto, Santo Domingo",
                            Email = "info@cesac.mil.do",
                            Nombre = "Cuerpo Especializado en Seguridad Aeroportuaria y Aviación Civil",
                            Telefono = "809-999-1001",
                            UrlLogo = "/Logos/cesac.png"
                        },
                        new
                        {
                            Id = 2,
                            CodigoNombre = "CECCOMM",
                            Direccion = "Av. John F. Kennedy, Santo Domingo",
                            Email = "info@ceccomm.mil.do",
                            Nombre = "Cuerpo Especializado de Control de Combustibles",
                            Telefono = "809-999-1002",
                            UrlLogo = "/Logos/ceccomm.png"
                        },
                        new
                        {
                            Id = 3,
                            CodigoNombre = "CIUTRAN",
                            Direccion = "Zona Militar, Santo Domingo",
                            Email = "info@ciutran.mil.do",
                            Nombre = "Fuerza de Tarea Conjunta Ciudad Tranquila",
                            Telefono = "809-999-1003",
                            UrlLogo = "/Logos/ciutran.png"
                        },
                        new
                        {
                            Id = 4,
                            CodigoNombre = "UNADE",
                            Direccion = "Ciudad Militar, Santo Domingo",
                            Email = "info@unade.mil.do",
                            Nombre = "Universidad Nacional para la Defensa",
                            Telefono = "809-999-1004",
                            UrlLogo = "/Logos/unade.png"
                        },
                        new
                        {
                            Id = 5,
                            CodigoNombre = "ISSFFAA",
                            Direccion = "Calle Principal #10, Santo Domingo",
                            Email = "info@issffaa.mil.do",
                            Nombre = "Instituto de Seguridad Social de las Fuerzas Armadas",
                            Telefono = "809-999-1005",
                            UrlLogo = "/Logos/issffaa.png"
                        },
                        new
                        {
                            Id = 6,
                            CodigoNombre = "HIFA",
                            Direccion = "Av. Independencia, Santo Domingo",
                            Email = "info@hifa.mil.do",
                            Nombre = "Hospital de las Fuerzas Armadas",
                            Telefono = "809-999-1006",
                            UrlLogo = "/Logos/hifa.png"
                        },
                        new
                        {
                            Id = 7,
                            CodigoNombre = "EGDDHHyDIH",
                            Direccion = "Ciudad Militar, Santo Domingo",
                            Email = "info@egddhh.mil.do",
                            Nombre = "Escuela de Graduados de Derechos Humanos y Derecho Internacional Humanitario",
                            Telefono = "809-999-1007",
                            UrlLogo = "/Logos/egddhh.png"
                        },
                        new
                        {
                            Id = 8,
                            CodigoNombre = "FARD",
                            Direccion = "Base Aérea San Isidro, Santo Domingo Este",
                            Email = "info@fard.mil.do",
                            Nombre = "Fuerza Aérea de la República Dominicana",
                            Telefono = "809-999-1008",
                            UrlLogo = "/Logos/fard.png"
                        },
                        new
                        {
                            Id = 9,
                            CodigoNombre = "ERD",
                            Direccion = "Av. 27 de Febrero, Santo Domingo",
                            Email = "info@ejercito.mil.do",
                            Nombre = "Ejército de la República Dominicana",
                            Telefono = "809-999-1009",
                            UrlLogo = "/Logos/ejercito.png"
                        },
                        new
                        {
                            Id = 10,
                            CodigoNombre = "ARD",
                            Direccion = "Base Naval, Santo Domingo",
                            Email = "info@armada.mil.do",
                            Nombre = "Armada de la República Dominicana",
                            Telefono = "809-999-1010",
                            UrlLogo = "/Logos/armada.png"
                        },
                        new
                        {
                            Id = 11,
                            CodigoNombre = "MIDE",
                            Direccion = "Av. Luperón, Santo Domingo",
                            Email = "info@mide.mil.do",
                            Nombre = "Ministerio de Defensa",
                            Telefono = "809-999-1011",
                            UrlLogo = "/Logos/mide.png"
                        },
                        new
                        {
                            Id = 12,
                            CodigoNombre = "C5i",
                            Direccion = "Av. Luperón, Santo Domingo",
                            Email = "info@C5iffaa.gob.do",
                            Nombre = "C5i de las Fuerzas Armadas",
                            Telefono = "809-999-1011",
                            UrlLogo = "images/logo/c5iLogo.png"
                        });
                });

            modelBuilder.Entity("Entities.InstitucionMilitar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstitucionMilitar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Institucion = "Ejército (ERD)"
                        },
                        new
                        {
                            Id = 2,
                            Institucion = "Armada (ARD)"
                        },
                        new
                        {
                            Id = 3,
                            Institucion = "Fuerza Aérea (FARD)"
                        },
                        new
                        {
                            Id = 4,
                            Institucion = "Ministerio de Defensa (MIDE)"
                        });
                });

            modelBuilder.Entity("Entities.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Azua"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Baoruco"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Barahona"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Dajabón"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Duarte"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Elías Piña"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "El Seibo"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Espaillat"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Hato Mayor"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Hermanas Mirabal"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Independencia"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "La Altagracia"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "La Romana"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "La Vega"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "María Trinidad Sánchez"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Monseñor Nouel"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Monte Cristi"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Monte Plata"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Pedernales"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Peravia"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Puerto Plata"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Samaná"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Sánchez Ramírez"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "San Cristóbal"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "San José de Ocoa"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "San Juan"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "San Pedro de Macorís"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Santiago"
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "Santiago Rodríguez"
                        },
                        new
                        {
                            Id = 30,
                            Nombre = "Santo Domingo"
                        },
                        new
                        {
                            Id = 31,
                            Nombre = "Valverde"
                        },
                        new
                        {
                            Id = 32,
                            Nombre = "Distrito Nacional"
                        });
                });

            modelBuilder.Entity("Entities.Rango", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstitucionMilitarId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucionMilitarId");

                    b.ToTable("Rangos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InstitucionMilitarId = 1,
                            Nombre = "Teniente General"
                        },
                        new
                        {
                            Id = 2,
                            InstitucionMilitarId = 1,
                            Nombre = "Mayor General"
                        },
                        new
                        {
                            Id = 3,
                            InstitucionMilitarId = 1,
                            Nombre = "General de Brigada"
                        },
                        new
                        {
                            Id = 4,
                            InstitucionMilitarId = 1,
                            Nombre = "Coronel"
                        },
                        new
                        {
                            Id = 5,
                            InstitucionMilitarId = 1,
                            Nombre = "Teniente Coronel"
                        },
                        new
                        {
                            Id = 6,
                            InstitucionMilitarId = 1,
                            Nombre = "Mayor"
                        },
                        new
                        {
                            Id = 7,
                            InstitucionMilitarId = 1,
                            Nombre = "Capitán"
                        },
                        new
                        {
                            Id = 8,
                            InstitucionMilitarId = 1,
                            Nombre = "Primer Teniente"
                        },
                        new
                        {
                            Id = 9,
                            InstitucionMilitarId = 1,
                            Nombre = "Segundo Teniente"
                        },
                        new
                        {
                            Id = 10,
                            InstitucionMilitarId = 1,
                            Nombre = "Sargento Mayor"
                        },
                        new
                        {
                            Id = 11,
                            InstitucionMilitarId = 1,
                            Nombre = "Sargento"
                        },
                        new
                        {
                            Id = 12,
                            InstitucionMilitarId = 1,
                            Nombre = "Cabo"
                        },
                        new
                        {
                            Id = 13,
                            InstitucionMilitarId = 1,
                            Nombre = "Raso"
                        },
                        new
                        {
                            Id = 14,
                            InstitucionMilitarId = 1,
                            Nombre = "Asimilado Militar"
                        },
                        new
                        {
                            Id = 15,
                            InstitucionMilitarId = 2,
                            Nombre = "Almirante"
                        },
                        new
                        {
                            Id = 16,
                            InstitucionMilitarId = 2,
                            Nombre = "Vicealmirante"
                        },
                        new
                        {
                            Id = 17,
                            InstitucionMilitarId = 2,
                            Nombre = "Contralmirante"
                        },
                        new
                        {
                            Id = 18,
                            InstitucionMilitarId = 2,
                            Nombre = "Capitán de Navio"
                        },
                        new
                        {
                            Id = 19,
                            InstitucionMilitarId = 2,
                            Nombre = "Capitán de Fragata"
                        },
                        new
                        {
                            Id = 20,
                            InstitucionMilitarId = 2,
                            Nombre = "Capitan de Corbeta"
                        },
                        new
                        {
                            Id = 21,
                            InstitucionMilitarId = 2,
                            Nombre = "Teniente de Navio"
                        },
                        new
                        {
                            Id = 22,
                            InstitucionMilitarId = 2,
                            Nombre = "Teniente de Fragata"
                        },
                        new
                        {
                            Id = 23,
                            InstitucionMilitarId = 2,
                            Nombre = "Teniente de Corbeta"
                        },
                        new
                        {
                            Id = 24,
                            InstitucionMilitarId = 2,
                            Nombre = "Sargento Mayor"
                        },
                        new
                        {
                            Id = 25,
                            InstitucionMilitarId = 2,
                            Nombre = "Sargento"
                        },
                        new
                        {
                            Id = 26,
                            InstitucionMilitarId = 2,
                            Nombre = "Cabo"
                        },
                        new
                        {
                            Id = 27,
                            InstitucionMilitarId = 2,
                            Nombre = "Raso"
                        },
                        new
                        {
                            Id = 28,
                            InstitucionMilitarId = 2,
                            Nombre = "Asimilado Militar"
                        },
                        new
                        {
                            Id = 29,
                            InstitucionMilitarId = 2,
                            Nombre = "Auxiliar"
                        },
                        new
                        {
                            Id = 30,
                            InstitucionMilitarId = 3,
                            Nombre = "Teniente General Piloto"
                        },
                        new
                        {
                            Id = 31,
                            InstitucionMilitarId = 3,
                            Nombre = "Mayor General Piloto"
                        },
                        new
                        {
                            Id = 32,
                            InstitucionMilitarId = 3,
                            Nombre = "General de Brigada Piloto"
                        },
                        new
                        {
                            Id = 33,
                            InstitucionMilitarId = 3,
                            Nombre = "Coronel"
                        },
                        new
                        {
                            Id = 34,
                            InstitucionMilitarId = 3,
                            Nombre = "Teniente Coronel"
                        },
                        new
                        {
                            Id = 35,
                            InstitucionMilitarId = 3,
                            Nombre = "Mayor"
                        },
                        new
                        {
                            Id = 36,
                            InstitucionMilitarId = 3,
                            Nombre = "Capitan"
                        },
                        new
                        {
                            Id = 37,
                            InstitucionMilitarId = 3,
                            Nombre = "Primer Teniente"
                        },
                        new
                        {
                            Id = 38,
                            InstitucionMilitarId = 3,
                            Nombre = "Segundo Teniente"
                        },
                        new
                        {
                            Id = 39,
                            InstitucionMilitarId = 3,
                            Nombre = "Sargento Mayor"
                        },
                        new
                        {
                            Id = 40,
                            InstitucionMilitarId = 3,
                            Nombre = "Sargento"
                        },
                        new
                        {
                            Id = 41,
                            InstitucionMilitarId = 3,
                            Nombre = "Cabo"
                        },
                        new
                        {
                            Id = 42,
                            InstitucionMilitarId = 3,
                            Nombre = "Raso"
                        },
                        new
                        {
                            Id = 43,
                            InstitucionMilitarId = 3,
                            Nombre = "Asimilado Militar"
                        },
                        new
                        {
                            Id = 44,
                            InstitucionMilitarId = 4,
                            Nombre = "Asimilado Militar"
                        });
                });

            modelBuilder.Entity("Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "IsRevoked");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Vacante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BeneficiosCompensaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionPuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuracionContrato")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EducacionRequerida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienciaRequerida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaLimiteAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HabilidadesCompetencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioTrabajo")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("InstitucionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("RequisitosGenerales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsabilidadesEspecificas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalarioCompensacion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TipoContrato")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("UserId");

                    b.HasIndex("InstitucionId", "CategoriaId", "ProvinciaId");

                    b.ToTable("Vacantes");
                });

            modelBuilder.Entity("Entities.Rango", b =>
                {
                    b.HasOne("Entities.InstitucionMilitar", "InstitucionMilitar")
                        .WithMany("Rangos")
                        .HasForeignKey("InstitucionMilitarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InstitucionMilitar");
                });

            modelBuilder.Entity("Entities.Session", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.HasOne("Entities.Departamento", "Departamento")
                        .WithMany("Users")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Institucion", "Institucion")
                        .WithMany("Users")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Institucion");
                });

            modelBuilder.Entity("Entities.Vacante", b =>
                {
                    b.HasOne("Entities.CategoriaVacante", "Categoria")
                        .WithMany("Vacantes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Institucion", "Institucion")
                        .WithMany("Vacantes")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entities.Provincia", "Provincia")
                        .WithMany("Vacantes")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany("Vacantes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Institucion");

                    b.Navigation("Provincia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.CategoriaVacante", b =>
                {
                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("Entities.Departamento", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entities.Institucion", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("Entities.InstitucionMilitar", b =>
                {
                    b.Navigation("Rangos");
                });

            modelBuilder.Entity("Entities.Provincia", b =>
                {
                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("Vacantes");
                });
#pragma warning restore 612, 618
        }
    }
}
