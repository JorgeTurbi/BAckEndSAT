// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndSAT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Dirección de Tecnología",
                            Director = "Capitan de Navío Jhonathan de la Cruz"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Recursos Humanos",
                            Director = "Mayor Piloto Jesica Heredia"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "Operaciones",
                            Director = "Coronel de Infantería Juan Pérez"
                        });
                });

            modelBuilder.Entity("Entities.Institucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlLogo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instituciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoNombre = "CESAC",
                            Direccion = "Av. Aeropuerto, Santo Domingo",
                            Email = "info@cesac.mil.do",
                            Nombre = "Cuerpo Especializado en Seguridad Aeroportuaria y Aviación Civil",
                            Telefono = "809-999-1001",
                            UrlLogo = "/Logos/cesac.png"
                        },
                        new
                        {
                            Id = 2,
                            CodigoNombre = "CECCOMM",
                            Direccion = "Av. John F. Kennedy, Santo Domingo",
                            Email = "info@ceccomm.mil.do",
                            Nombre = "Cuerpo Especializado de Control de Combustibles",
                            Telefono = "809-999-1002",
                            UrlLogo = "/Logos/ceccomm.png"
                        },
                        new
                        {
                            Id = 3,
                            CodigoNombre = "CIUTRAN",
                            Direccion = "Zona Militar, Santo Domingo",
                            Email = "info@ciutran.mil.do",
                            Nombre = "Fuerza de Tarea Conjunta Ciudad Tranquila",
                            Telefono = "809-999-1003",
                            UrlLogo = "/Logos/ciutran.png"
                        },
                        new
                        {
                            Id = 4,
                            CodigoNombre = "UNADE",
                            Direccion = "Ciudad Militar, Santo Domingo",
                            Email = "info@unade.mil.do",
                            Nombre = "Universidad Nacional para la Defensa",
                            Telefono = "809-999-1004",
                            UrlLogo = "/Logos/unade.png"
                        },
                        new
                        {
                            Id = 5,
                            CodigoNombre = "ISSFFAA",
                            Direccion = "Calle Principal #10, Santo Domingo",
                            Email = "info@issffaa.mil.do",
                            Nombre = "Instituto de Seguridad Social de las Fuerzas Armadas",
                            Telefono = "809-999-1005",
                            UrlLogo = "/Logos/issffaa.png"
                        },
                        new
                        {
                            Id = 6,
                            CodigoNombre = "HIFA",
                            Direccion = "Av. Independencia, Santo Domingo",
                            Email = "info@hifa.mil.do",
                            Nombre = "Hospital de las Fuerzas Armadas",
                            Telefono = "809-999-1006",
                            UrlLogo = "/Logos/hifa.png"
                        },
                        new
                        {
                            Id = 7,
                            CodigoNombre = "EGDDHHyDIH",
                            Direccion = "Ciudad Militar, Santo Domingo",
                            Email = "info@egddhh.mil.do",
                            Nombre = "Escuela de Graduados de Derechos Humanos y Derecho Internacional Humanitario",
                            Telefono = "809-999-1007",
                            UrlLogo = "/Logos/egddhh.png"
                        },
                        new
                        {
                            Id = 8,
                            CodigoNombre = "FARD",
                            Direccion = "Base Aérea San Isidro, Santo Domingo Este",
                            Email = "info@fard.mil.do",
                            Nombre = "Fuerza Aérea de la República Dominicana",
                            Telefono = "809-999-1008",
                            UrlLogo = "/Logos/fard.png"
                        },
                        new
                        {
                            Id = 9,
                            CodigoNombre = "ERD",
                            Direccion = "Av. 27 de Febrero, Santo Domingo",
                            Email = "info@ejercito.mil.do",
                            Nombre = "Ejército de la República Dominicana",
                            Telefono = "809-999-1009",
                            UrlLogo = "/Logos/ejercito.png"
                        },
                        new
                        {
                            Id = 10,
                            CodigoNombre = "ARD",
                            Direccion = "Base Naval, Santo Domingo",
                            Email = "info@armada.mil.do",
                            Nombre = "Armada de la República Dominicana",
                            Telefono = "809-999-1010",
                            UrlLogo = "/Logos/armada.png"
                        },
                        new
                        {
                            Id = 11,
                            CodigoNombre = "MIDE",
                            Direccion = "Av. Luperón, Santo Domingo",
                            Email = "info@mide.mil.do",
                            Nombre = "Ministerio de Defensa",
                            Telefono = "809-999-1011",
                            UrlLogo = "/Logos/mide.png"
                        },
                        new
                        {
                            Id = 12,
                            CodigoNombre = "C5i",
                            Direccion = "Av. Luperón, Santo Domingo",
                            Email = "info@C5iffaa.gob.do",
                            Nombre = "C5i de las Fuerzas Armadas",
                            Telefono = "809-999-1011",
                            UrlLogo = "/Logos/mide.png"
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.HasOne("Entities.Departamento", "Departamento")
                        .WithMany("Users")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Institucion", "Institucion")
                        .WithMany("Users")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Institucion");
                });

            modelBuilder.Entity("Entities.Departamento", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entities.Institucion", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
